<?xml version="1.0" encoding="UTF-8" ?>   
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 表名称：t02_int_org -->
<mapper namespace="com.idp.sysmgr.institution.entity.Institution">
	<!-- *.来映射文件字段与类属性的对就关系 ibatis默认不对字段进行去下划线工作 -->
	
	<resultMap id="institutionMap" type="com.idp.sysmgr.institution.entity.Institution">
		<result property="orgCd" column="ORG_CD" jdbcType="VARCHAR" />
		<result property="orgName" column="ORG_NAME" jdbcType="VARCHAR" />
		<result property="parentOrgCd" column="PARENT_ORG_CD" jdbcType="VARCHAR" />
		<result property="parentLeveCd" column="PARENT_LEVE_CD" jdbcType="INTEGER" />
		<result property="orgId" column="ORG_ID" jdbcType="VARCHAR" />
		<result property="state" column="STATE" jdbcType="VARCHAR" />
		<result property="postCode" column="POSTCODE" jdbcType="VARCHAR" />
		<result property="updateTime" column="UPDATE_TIME" jdbcType="DATE" />
		<result property="orgOname" column="ORG_ONAME" jdbcType="VARCHAR" />
		<result property="provCode" column="PROV_CODE" jdbcType="INTEGER" />
	</resultMap>
	
	<select id="query" parameterType="java.util.Map" resultMap="institutionMap">
		select 
		   t.org_cd,
	       t.org_name,
	       t.parent_org_cd,
	       t.parent_leve_cd,
	       t.org_id,
	       t.state,
	       t.postcode,
	       t.update_time,
	       t.org_oname,
	       t.prov_code 
	    from t02_int_org t
		<include refid="dynamicWhere" />
	</select>
	
	<select id="getById" parameterType="String"  resultMap="institutionMap" >
		select t.org_cd,
		       t.org_name,
		       t.parent_org_cd,
		       t.parent_leve_cd,
		       t.org_id,
		       t.state,
		       t.postcode,
		       t.update_time,
		       t.org_oname,
		       t.prov_code
		from t02_int_org t where t.ORG_CD=#{value}
	</select>
	
	<insert id="insert" parameterType="com.idp.sysmgr.institution.entity.Institution" flushCache="true">
		INSERT INTO 
	    t02_int_org (ORG_CD,ORG_NAME,PARENT_ORG_CD,PARENT_LEVE_CD,ORG_ID,STATE,POSTCODE,UPDATE_TIME,ORG_ONAME,PROV_CODE) 
	    			values(
	    			#{orgCd,jdbcType=VARCHAR},
	    			#{orgName,jdbcType=VARCHAR},
	    			#{parentOrgCd,jdbcType=VARCHAR},
	    			#{parentLeveCd,jdbcType=INTEGER},
	    			#{orgId,jdbcType=VARCHAR},
	    			#{state,jdbcType=VARCHAR},
	    			#{postCode,jdbcType=VARCHAR},
	    			#{updateTime,jdbcType=DATE},
	    			#{orgOname,jdbcType=VARCHAR},
	    			#{provCode,jdbcType=INTEGER}
	    			)
	</insert>
	
	<!-- 2.1.根据条件查询 列表 分页 排序 -->
	<select id="findByPager" parameterType="java.util.Map" resultMap="institutionMap">
		select t.org_cd,
		       t.org_name,
		       t.parent_org_cd,
		       t.parent_leve_cd,
		       t.org_id,
		       t.state,
		       t.postcode,
		       t.update_time,
		       t.org_oname,
		       t.prov_code from
        	(select s.* , ROWNUM AS rowno from t02_int_org s
                 where ROWNUM <![CDATA[<=]]>${eno}) t 
		<include refid="dynamicWhere" />
	</select>
	
	<!-- 3.1.根据对像条件查询记录数 MAP参数 -->
	<select id="findByPagerCount" parameterType="java.util.Map" resultType="int">
		select
		count(1)
		from
		t02_int_org t
		<include refid="dynamicWhere" />
	</select>
	
	<sql id="dynamicWhere">
		<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="orgName!=null">
				AND t.ORG_NAME=#{orgName,jdbcType=VARCHAR} 
			</if>
			<if test="parentOrgCd!=null">
				AND t.PARENT_ORG_CD=#{parentOrgCd,jdbcType=VARCHAR} 
			</if>
			<if test="parentLeveCd!=null">
				AND t.PARENT_LEVE_CD=#{parentLeveCd,jdbcType=INTEGER} 
			</if>
			<if test="orgCd!=null">
				AND t.ORG_CD=#{orgCd,jdbcType=VARCHAR}
			</if>
			<if test="state!=null">
				AND t.STATE=#{state,jdbcType=VARCHAR} 
			</if>
			<if test="postCode!=null">
				AND t.POSTCODE=#{postCode,jdbcType=VARCHAR} 
			</if>
			<if test="orgOname!=null">
				AND t.ORG_ONAME=#{orgOname,jdbcType=VARCHAR} 
			</if>
			<if test="sno!=null and eno!=null">
				AND t.rowno <![CDATA[>=]]> ${sno}
			</if>
		</trim>

	</sql>

	<!-- 4.删除 -->
	<delete id="delete" parameterType="com.idp.sysmgr.institution.entity.Institution" flushCache="true">
		DELETE  from t02_int_org t
		<include refid="dynamicWhere" />
	</delete>
	
	<update id="update" parameterType="java.util.Map" flushCache="true">
		update t02_int_org t 
		<include refid="dynamicSet"/>
		where t.ORG_CD=#{orgCd,jdbcType=VARCHAR}
	</update>
	
	<!-- update:set 动态生成可更新字段 -->
	<sql id="dynamicSet">
		<trim prefix="SET" prefixOverrides=",">
			<if test="orgName!=null">
				,t.ORG_NAME=#{orgName,jdbcType=VARCHAR} 
			</if>
			<if test="parentOrgCd!=null">
				,t.PARENT_ORG_CD=#{parentOrgCd,jdbcType=VARCHAR} 
			</if>
			<if test="parentLeveCd!=null">
				,t.PARENT_LEVE_CD=#{parentLeveCd,jdbcType=INTEGER} 
			</if>
			<if test="orgId!=null">
				,t.ORG_ID=#{orgId,jdbcType=VARCHAR}
			</if>
			<if test="state!=null">
				,t.STATE=#{state,jdbcType=VARCHAR} 
			</if>
			<if test="postCode!=null">
				,t.POSTCODE=#{postCode,jdbcType=VARCHAR} 
			</if>
			<if test="provCode!=null">
				,t.PROV_CODE=#{provCode,jdbcType=INTEGER} 
			</if>
			<if test="orgOname!=null">
				,t.ORG_ONAME=#{orgOname,jdbcType=VARCHAR} 
			</if>
			<if test="updateTime!=null">
				,t.UPDATE_TIME=#{updateTime,jdbcType=DATE}
			</if>
		</trim>
	</sql>
	
	   
	<select id="ifLowerLevelorgcd" parameterType="java.util.Map"  resultMap="institutionMap" >
	        
		SELECT 1
		  FROM T02_INT_ORG T
		 WHERE T.ORG_CD = #{cureentOrgCd,jdbcType=VARCHAR}  ---'520000000100' --当前机构号
		   AND EXISTS (SELECT 1
		          FROM (SELECT ORG_CD
		                  FROM T02_INT_ORG
		                 START WITH ORG_CD =#{targetOrgCd,jdbcType=VARCHAR}    --'52AA00000000' --目标机构号
		                CONNECT BY PRIOR ORG_CD = PARENT_ORG_CD) A
		         WHERE A.ORG_CD = T.ORG_CD)
		   AND ROWNUM = 1;
	</select>
		  
	      
	<select id="queryLowerLevelorgcd" parameterType="String"  resultMap="institutionMap" >
		  
		select org_cd , parent_org_cd , parent_leve_cd
		     from t02_int_org t
		
		 start with t.org_cd = #{value}
		 connect by prior t.org_cd = t.parent_org_cd
                        
	</select>
	
</mapper>